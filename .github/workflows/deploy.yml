name: CI + CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: withastro/action@v0.2.0
        # with:
        #   path: . # The root location of your Astro project inside the repository. (optional)
        #   node-version: 16 # The specific version of Node that should be used to build your site. Defaults to 16. (optional)
        #   package-manager: yarn # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)
        #   resolve-dep-from-path: false # If the dependency file should be resolved from the root location of your Astro project. Defaults to `true`. (optional)
        env:
          SITE_URL: ${{ vars.SITE_URL }}
          CLOUDINARY_CLOUD_NAME: ${{ vars.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_FOLDER: ${{ vars.CLOUDINARY_FOLDER }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}

  # dev:
  #   name: Deploy to Dev
  #   if: github.event_name == 'pull_request'
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: Development
  #     url: "http://dev.myapp.com"
  #   steps:
  #     - name: Deploy
  #       run: echo I am deploying!

  # staging:
  #   name: Deploy to Staging
  #   if: github.event.ref == 'refs/heads/main'
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: Staging
  #     url: "http://test.myapp.com"
  #   steps:
  #     - name: Deploy
  #       run: echo I am deploying!

  prod:
    name: Deploy to Production
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: "https://bayukurnia.com"
    steps:
      - name: deploy
        uses: cloudflare/pages-action@v1.4.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ vars.ACCOUNT_ID }}
          projectName: ${{ vars.PROJECT_NAME }}
          directory: ${{ vars.ASSET_DIRECTORY }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
