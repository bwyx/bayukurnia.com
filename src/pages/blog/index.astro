---
export const prerender = true

import { getCollection } from 'astro:content'

import MainLayout from '~/layouts/Main.layout.astro'
import PostCard from '~/components/blog/PostCard/PostCard.astro'
import Header from '~/components/blog/Header/Header.astro'
import Footer from '~/components/Footer/Footer.astro'

import styles from '~/styles/pages/blog.css'

const posts = await getCollection('blog')
---

<MainLayout title="Home">
  <Header
    title="blog"
    description="yes. once in a while. about random things"
  />
  <section class={styles.content}>
    <blog-post-wrapper class={styles.postWrapper}>
      {posts.map((post) => <PostCard {...post} />)}
    </blog-post-wrapper>
  </section>
  <Footer />
</MainLayout>

<script>
  class BlogPostWrapper extends HTMLElement {
    rect: DOMRect
    gsap: typeof gsap | null
    constructor() {
      super()

      this.gsap = null
      this.rect = this.getBoundingClientRect()
    }

    connectedCallback() {
      this.addEventListener('mousemove', this.handleMouseMove)
      document.addEventListener('resize', this.handleDocumentResize)
      document.addEventListener('turbo:load', this.loadGsap)
    }

    disconnectedCallback() {
      this.removeEventListener('mousemove', this.handleMouseMove)
      document.removeEventListener('resize', this.handleDocumentResize)
      document.removeEventListener('turbo:load', this.loadGsap)
    }

    handleMouseMove = (e: MouseEvent) => {
      const x = e.clientX - this.rect.left
      const y = e.clientY - this.rect.top

      this.gsap?.to(this, {
        '--x': `${x}px`,
        '--y': `${y}px`,
        duration: 1.5,
        ease: 'expo.out'
      })
    }

    handleDocumentResize = () => {
      this.rect = this.getBoundingClientRect()
    }

    loadGsap = async () => {
      if (this.gsap) return

      const { gsap } = await import('gsap')
      this.gsap = gsap
    }
  }

  customElements.define('blog-post-wrapper', BlogPostWrapper)
</script>
