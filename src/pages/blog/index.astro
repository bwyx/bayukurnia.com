---
export const prerender = true

import { getCollection } from 'astro:content'

import MainLayout from '~/layouts/Main.layout.astro'
import PostCard from '~/components/blog/PostCard/PostCard.astro'
import Header from '~/components/blog/Header/Header.astro'
import Footer from '~/components/Footer/Footer.astro'

import styles from '~/styles/pages/blog.css'

const posts = await getCollection('blog')
---

<MainLayout title="Home">
  <article class={styles.content}>
    <Header
      title="blog"
      description="yes. once in a while. about random things"
    />
    <b-posts class={styles.posts}>
      {posts.map((post) => <PostCard {...post} />)}
    </b-posts>
  </article>
  <Footer />
</MainLayout>

<script>
  class BPosts extends HTMLElement {
    hasCursor: boolean
    rect: DOMRect
    gsap: typeof gsap | null

    constructor() {
      super()

      this.hasCursor = matchMedia('pointer: fine').matches
      this.gsap = null
      this.rect = this.getBoundingClientRect()
    }

    connectedCallback() {
      this.addEventListener('mousemove', this.handleMouseMove)
      window.addEventListener('resize', this.handleDocumentResize)
    }

    disconnectedCallback() {
      this.removeEventListener('mousemove', this.handleMouseMove)
      window.removeEventListener('resize', this.handleDocumentResize)
    }

    handleMouseMove = (e: MouseEvent) => {
      if (!this.hasCursor) return
      if (!this.gsap) {
        this.loadGsap()
        return
      }

      const x = e.clientX - this.rect.left
      const y = e.clientY - this.rect.top

      this.gsap?.to(this, {
        '--x': `${x}px`,
        '--y': `${y}px`,
        duration: 1.5,
        ease: 'expo.out'
      })
    }

    handleDocumentResize = () => {
      console.log('resize')
      this.rect = this.getBoundingClientRect()
    }

    loadGsap = async () => {
      if (this.gsap) return

      const { gsap } = await import('gsap')
      this.gsap = gsap
    }
  }

  customElements.define('b-posts', BPosts)
</script>
