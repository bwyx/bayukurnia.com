---
import type { HTMLAttributes } from 'astro/types'

import '~/styles/global.css'

export interface Props {
  title: string
  body?: HTMLAttributes<'body'>
}

const { title, body } = Astro.props
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="Hi there!" />
    <link
      rel="preload"
      href="/fonts/plus-jakarta-sans-latin-variable-wghtOnly-normal.woff2"
      as="font"
      type="font/woff2"
      crossorigin="true"
    />
    <link
      rel="preload"
      href="/fonts/Erode-Variable.woff2"
      as="font"
      type="font/woff2"
      crossorigin="true"
    />
    <script src="~/lib/turbo.ts"></script>
    <title>{title}</title>
  </head>
  <body {...body}>
    <script is:inline>
      ;(function () {
        function setTheme(newTheme) {
          document.documentElement.className = newTheme
          window.__theme = newTheme
          window.__onThemeChange(newTheme)
        }
        window.__onThemeChange = function () {}
        window.__setPreferredTheme = function (newTheme) {
          setTheme(newTheme)
          try {
            localStorage.setItem('theme', JSON.stringify(window.__theme))
          } catch (err) {}
        }
        const darkQuery = window.matchMedia('(prefers-color-scheme: dark)')
        darkQuery.addListener(function (event) {
          window.__setPreferredTheme(event.matches ? 'dark' : 'light')
        })
        let preferredTheme
        try {
          preferredTheme = JSON.parse(localStorage.getItem('theme'))
        } catch (err) {}
        setTheme(preferredTheme || (darkQuery.matches ? 'dark' : 'light'))
      })()
    </script>
    <slot />
  </body>
</html>
